###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# choosing a machine
machine <- "mac"
if(require(pacman) == FALSE) install.packages("pacman")
library(pacman)
p_load(foreign, sas7bdat, beepr, BTYD, stargazer, ggplot2, caret, e1071, R.utils, randomForest, party)
beep(2)
# loading libraries
if(require(pacman) == FALSE) install.packages("pacman")
library(pacman)
p_load(compiler)
Sys.info()[8]
getwd()
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting working directory depending on a user
if (Sys.info()[8] == "lizzzi111") {setwd("~/Documents/DSG_2017_Finals/")}
if (Sys.info()[8] == "kozodoi")   {setwd("~/Documents/DSG_2017_Finals/")}
if (Sys.info()[8] == "")          {setwd("")}
if (Sys.info()[8] == "")          {setwd("")}
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
if(require(pacman) == FALSE) install.packages("pacman")
library(pacman)
p_load(data.table, ggplot2, caret)
# loading all functions
source(file.path(code.folder, "code_0_helper_functions.R"))
getwd()
Sys.info()[8]
(Sys.info()[8] == "kozodoi")
if (Sys.info()[8] == "kozodoi")   {setwd("~/Documents/DSG_2017_Finals/")}
if (Sys.info()[8] == "kozodoi")   {setwd("Users/kozodoi/Documents/DSG_2017_Finals/")}
getwd()
40 + 20*24 + 30*12
15*12 + 30*24
10*12 + 25*24
10*3 + 15*9 + 30*24
15*12 + 30*24
1397110.53/1000/9
50+3*9.99+6*19.99+3*29.99
50+3*9.99+9*19.99
3*9.99+9*19.99
3*9.99+9*19.99+12*29.99
50+3*9.99+9*19.99+29.99
3*9.99+9*19.99+12*29.99
50+3*9.99+9*19.99+12*29.99
50+3*9.99+9*19.99
3*9.99+9*19.99+12*29.99
50+3*9.99+9*19.99+12*29.99
50+3*9.99+9*19.99
50+3*9.99+6*19.99+15*29.99
50+3*9.99+6*19.99+2*29.99
3*9.99+9*19.99
3*10 + 9+15
3*10 + 9*15
50 + 3*10 + 6*15 +3*30
30*12
0.7*(-95) + 0.3*265
0.8*(-95) + 0.2*265
799 + 7.99*24
(799 + 7.99*24) / 24
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting directory depending on a user
if (Sys.info()[8] == "lizzzi111")           {setwd("~/Documents/DSG_2017_Finals/")}
if (Sys.info()[8] == "kozodoi")             {setwd("~/Documents/Competitions/DSG_2017_Finals/")}
if (Sys.info()[8] == "nataliasverchkova")   {setwd("~/Documents/DSG/DSG_2017_Finals/")}
if (Sys.info()[8] == "oleksiyostapenko")    {setwd("/Users/oleksiyostapenko/Documents/HU_Berlin/ML/DSG/DSG_2017_Finals")}
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
if (require(pacman) == FALSE) install.packages("pacman")
library(pacman)
p_load(dplyr, data.table, caret, Metrics, xgboost, vtreat, plyr, matrixStats)
# loading all functions
source(file.path(code.folder, "code_0_helper_functions.R"))
source(file.path(code.folder, "code_0_parameters.R"))
###################################
#                                 #
#           TRANSFORMATION        #
#                                 #
###################################
# loading data
known <- load_rda(file.path(data.folder, "known_with_depvar_20_00.rda"))
known <- as.data.frame(known)
known <- known[, c("Month", "SalOrg", "Material", "demand", "demand_lead3")]
# adding lags
known <- as.data.table(known)
known[, .demand_lag_1  := shift(demand, 1),  by = .(SalOrg, Material)]
known[, .demand_lag_2  := shift(demand, 2),  by = .(SalOrg, Material)]
known[, .demand_lag_3  := shift(demand, 3),  by = .(SalOrg, Material)]
known[, .demand_lag_4  := shift(demand, 4),  by = .(SalOrg, Material)]
known[, .demand_lag_5  := shift(demand, 5),  by = .(SalOrg, Material)]
known[, .demand_lag_6  := shift(demand, 6),  by = .(SalOrg, Material)]
known[, .demand_lag_7  := shift(demand, 7),  by = .(SalOrg, Material)]
known[, .demand_lag_8  := shift(demand, 8),  by = .(SalOrg, Material)]
known[, .demand_lag_9  := shift(demand, 9),  by = .(SalOrg, Material)]
known[, .demand_lag_10  := shift(demand, 10),  by = .(SalOrg, Material)]
known[, .demand_lag_11  := shift(demand, 11),  by = .(SalOrg, Material)]
known <- as.data.frame(known)
know <- known[, !(colnames(known) %in% c("demand_lead2", "demand_lead1", "demand_lead123", "Month_c"))]
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting directory depending on a user
if (Sys.info()[8] == "lizzzi111")           {setwd("~/Documents/DSG_2017_Finals/")}
if (Sys.info()[8] == "kozodoi")             {setwd("~/Documents/Competitions/DSG_2017_Finals/")}
if (Sys.info()[8] == "nataliasverchkova")   {setwd("~/Documents/DSG/DSG_2017_Finals/")}
if (Sys.info()[8] == "oleksiyostapenko")    {setwd("/Users/oleksiyostapenko/Documents/HU_Berlin/ML/DSG/DSG_2017_Finals")}
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
if (require(pacman) == FALSE) install.packages("pacman")
library(pacman)
p_load(dplyr, data.table, caret, Metrics, xgboost, vtreat, plyr, matrixStats)
# loading all functions
source(file.path(code.folder, "code_0_helper_functions.R"))
source(file.path(code.folder, "code_0_parameters.R"))
###################################
#                                 #
#           TRANSFORMATION        #
#                                 #
###################################
# loading data
known <- load_rda(file.path(data.folder, "known_with_depvar_20_00.rda"))
known <- as.data.frame(known)
known <- known[, c("Month", "SalOrg", "Material", "demand")]
# add movштп averфпу
know <- as.data.table(know)
variable <- "demand"
var_name <- paste0(variable, "_mean_", c(2:10))
know[, (var_name[2])  := rowMeans(mapply(cbind, shift(get(variable), 1:2)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[3])  := rowMeans(mapply(cbind, shift(get(variable), 1:3)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[4])  := rowMeans(mapply(cbind, shift(get(variable), 1:4)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[5])  := rowMeans(mapply(cbind, shift(get(variable), 1:5)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[6])  := rowMeans(mapply(cbind, shift(get(variable), 1:6)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[7])  := rowMeans(mapply(cbind, shift(get(variable), 1:7)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[8])  := rowMeans(mapply(cbind, shift(get(variable), 1:8)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[9])  := rowMeans(mapply(cbind, shift(get(variable), 1:9)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[10]) := rowMeans(mapply(cbind, shift(get(variable), 1:10)),  na.rm = T), by = .(SalOrg, Material)]
var_name <- paste0(variable, "_sm_", c(2:10))
know[, (var_name[2])  := rowSds(mapply(cbind, shift(get(variable), 1:2)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[3])  := rowSds(mapply(cbind, shift(get(variable), 1:3)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[4])  := rowSds(mapply(cbind, shift(get(variable), 1:4)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[5])  := rowSds(mapply(cbind, shift(get(variable), 1:5)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[6])  := rowSds(mapply(cbind, shift(get(variable), 1:6)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[7])  := rowSds(mapply(cbind, shift(get(variable), 1:7)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[8])  := rowSds(mapply(cbind, shift(get(variable), 1:8)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[9])  := rowSds(mapply(cbind, shift(get(variable), 1:9)),   na.rm = T), by = .(SalOrg, Material)]
know[, (var_name[10]) := rowSds(mapply(cbind, shift(get(variable), 1:10)),  na.rm = T), by = .(SalOrg, Material)]
know <- as.data.frame(know)
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting directory depending on a user
if (Sys.info()[8] == "lizzzi111")           {setwd("~/Documents/DSG_2017_Finals/")}
if (Sys.info()[8] == "kozodoi")             {setwd("~/Documents/Competitions/DSG_2017_Finals/")}
if (Sys.info()[8] == "nataliasverchkova")   {setwd("~/Documents/DSG/DSG_2017_Finals/")}
if (Sys.info()[8] == "oleksiyostapenko")    {setwd("/Users/oleksiyostapenko/Documents/HU_Berlin/ML/DSG/DSG_2017_Finals")}
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
if (require(pacman) == FALSE) install.packages("pacman")
library(pacman)
p_load(dplyr, data.table, caret, Metrics, xgboost, vtreat, plyr, matrixStats)
# loading all functions
source(file.path(code.folder, "code_0_helper_functions.R"))
source(file.path(code.folder, "code_0_parameters.R"))
###################################
#                                 #
#           TRANSFORMATION        #
#                                 #
###################################
# loading data
known <- load_rda(file.path(data.folder, "known_with_depvar_20_00.rda"))
known <- as.data.frame(known)
known <- known[, c("Month", "SalOrg", "Material", "demand")]
# add movштп averфпу
known <- as.data.table(known)
variable <- "demand"
var_name <- paste0(variable, "_mean_", c(2:10))
known[, (var_name[2])  := rowMeans(mapply(cbind, shift(get(variable), 1:2)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[3])  := rowMeans(mapply(cbind, shift(get(variable), 1:3)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[4])  := rowMeans(mapply(cbind, shift(get(variable), 1:4)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[5])  := rowMeans(mapply(cbind, shift(get(variable), 1:5)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[6])  := rowMeans(mapply(cbind, shift(get(variable), 1:6)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[7])  := rowMeans(mapply(cbind, shift(get(variable), 1:7)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[8])  := rowMeans(mapply(cbind, shift(get(variable), 1:8)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[9])  := rowMeans(mapply(cbind, shift(get(variable), 1:9)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[10]) := rowMeans(mapply(cbind, shift(get(variable), 1:10)),  na.rm = T), by = .(SalOrg, Material)]
var_name <- paste0(variable, "_sm_", c(2:10))
known[, (var_name[2])  := rowSds(mapply(cbind, shift(get(variable), 1:2)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[3])  := rowSds(mapply(cbind, shift(get(variable), 1:3)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[4])  := rowSds(mapply(cbind, shift(get(variable), 1:4)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[5])  := rowSds(mapply(cbind, shift(get(variable), 1:5)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[6])  := rowSds(mapply(cbind, shift(get(variable), 1:6)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[7])  := rowSds(mapply(cbind, shift(get(variable), 1:7)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[8])  := rowSds(mapply(cbind, shift(get(variable), 1:8)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[9])  := rowSds(mapply(cbind, shift(get(variable), 1:9)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[10]) := rowSds(mapply(cbind, shift(get(variable), 1:10)),  na.rm = T), by = .(SalOrg, Material)]
known <- as.data.frame(known)
# predicting unknown
table(known$Month)
# loading data
known <- load_rda(file.path(data.folder, "known_with_depvar_20_00.rda"))
known <- as.data.frame(known)
known <- known[, c("Month", "SalOrg", "Material", "demand")]
head(known)
unknown <- load_rda(file.path(data.folder, "data_unknown.rda"))
head(unknown)
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting directory depending on a user
if (Sys.info()[8] == "lizzzi111")           {setwd("~/Documents/DSG_2017_Finals/")}
if (Sys.info()[8] == "kozodoi")             {setwd("~/Documents/Competitions/DSG_2017_Finals/")}
if (Sys.info()[8] == "nataliasverchkova")   {setwd("~/Documents/DSG/DSG_2017_Finals/")}
if (Sys.info()[8] == "oleksiyostapenko")    {setwd("/Users/oleksiyostapenko/Documents/HU_Berlin/ML/DSG/DSG_2017_Finals")}
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
if (require(pacman) == FALSE) install.packages("pacman")
library(pacman)
p_load(dplyr, data.table, caret, Metrics, xgboost, vtreat, plyr, matrixStats)
# loading all functions
source(file.path(code.folder, "code_0_helper_functions.R"))
source(file.path(code.folder, "code_0_parameters.R"))
###################################
#                                 #
#           TRANSFORMATION        #
#                                 #
###################################
# loading known data
known <- load_rda(file.path(data.folder, "known_with_depvar_20_00.rda"))
known <- as.data.frame(known)
known <- known[, c("Month", "SalOrg", "Material", "demand")]
known$ID <- NA
# loading unknown data
unknown <- load_rda(file.path(data.folder, "data_unknown.rda"))
unknown$demand <- 0
# merging
known <- rbind(known, unknown)
# add moving average
known <- as.data.table(known)
variable <- "demand"
var_name <- paste0(variable, "_mean_", c(2:10))
known[, (var_name[2])  := rowMeans(mapply(cbind, shift(get(variable), 1:2)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[3])  := rowMeans(mapply(cbind, shift(get(variable), 1:3)),   na.rm = T), by = .(SalOrg, Material)]
head(known)
head(unknown)
known <- known[, c("Month", "SalOrg", "Material", "demand")]
# loading known data
known <- load_rda(file.path(data.folder, "known_with_depvar_20_00.rda"))
known <- as.data.frame(known)
known <- known[, c("Month", "SalOrg", "Material", "demand")]
known$ID <- NA
# loading unknown data
unknown <- load_rda(file.path(data.folder, "data_unknown.rda"))
unknown$demand <- 0
# merging
known <- rbind(known, unknown)
names(known)
names(unknown)
# loading known data
known <- load_rda(file.path(data.folder, "known_with_depvar_20_00.rda"))
known <- as.data.frame(known)
known <- known[, c("Month", "SalOrg", "Material", "demand")]
known$ID <- NA
known$date <- NA
# loading unknown data
unknown <- load_rda(file.path(data.folder, "data_unknown.rda"))
unknown$demand <- NA
unknown$Month <- unknown$date
# merging
known <- rbind(known, unknown)
# loading known data
known <- load_rda(file.path(data.folder, "known_with_depvar_20_00.rda"))
known <- as.data.frame(known)
known <- known[, c("Month", "SalOrg", "Material", "demand")]
known$ID <- NA
known$date <- NA
# loading unknown data
unknown <- load_rda(file.path(data.folder, "data_unknown.rda"))
unknown$demand <- NA
unknown$Month <- unknown$date
# merging
known <- rbind(known, unknown)
# add moving average
known <- as.data.table(known)
variable <- "demand"
var_name <- paste0(variable, "_mean_", c(2:10))
known[, (var_name[2])  := rowMeans(mapply(cbind, shift(get(variable), 1:2)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[3])  := rowMeans(mapply(cbind, shift(get(variable), 1:3)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[4])  := rowMeans(mapply(cbind, shift(get(variable), 1:4)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[5])  := rowMeans(mapply(cbind, shift(get(variable), 1:5)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[6])  := rowMeans(mapply(cbind, shift(get(variable), 1:6)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[7])  := rowMeans(mapply(cbind, shift(get(variable), 1:7)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[8])  := rowMeans(mapply(cbind, shift(get(variable), 1:8)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[9])  := rowMeans(mapply(cbind, shift(get(variable), 1:9)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[10]) := rowMeans(mapply(cbind, shift(get(variable), 1:10)),  na.rm = T), by = .(SalOrg, Material)]
var_name <- paste0(variable, "_sm_", c(2:10))
known[, (var_name[2])  := rowSds(mapply(cbind, shift(get(variable), 1:2)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[3])  := rowSds(mapply(cbind, shift(get(variable), 1:3)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[4])  := rowSds(mapply(cbind, shift(get(variable), 1:4)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[5])  := rowSds(mapply(cbind, shift(get(variable), 1:5)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[6])  := rowSds(mapply(cbind, shift(get(variable), 1:6)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[7])  := rowSds(mapply(cbind, shift(get(variable), 1:7)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[8])  := rowSds(mapply(cbind, shift(get(variable), 1:8)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[9])  := rowSds(mapply(cbind, shift(get(variable), 1:9)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[10]) := rowSds(mapply(cbind, shift(get(variable), 1:10)),  na.rm = T), by = .(SalOrg, Material)]
known <- as.data.frame(known)
# predicting unknown as moving average
unknown.months <- c("2017-04", "2017-05", "2017-06")
data_unknown <- as.data.frame(known[known$Month %in% unknown.months, ])
head(data_unknown)
summary(data_unknown)
###################################
#                                 #
#             SETTINGS            #
#                                 #
###################################
# clearing the memory
rm(list = ls())
# setting directory depending on a user
if (Sys.info()[8] == "lizzzi111")           {setwd("~/Documents/DSG_2017_Finals/")}
if (Sys.info()[8] == "kozodoi")             {setwd("~/Documents/Competitions/DSG_2017_Finals/")}
if (Sys.info()[8] == "nataliasverchkova")   {setwd("~/Documents/DSG/DSG_2017_Finals/")}
if (Sys.info()[8] == "oleksiyostapenko")    {setwd("/Users/oleksiyostapenko/Documents/HU_Berlin/ML/DSG/DSG_2017_Finals")}
# setting inner folders
code.folder <- "codes"
data.folder <- "data"
func.folder <- "functions"
subm.folder <- "submissions"
# loading libraries
if (require(pacman) == FALSE) install.packages("pacman")
library(pacman)
p_load(dplyr, data.table, caret, Metrics, xgboost, vtreat, plyr, matrixStats)
# loading all functions
source(file.path(code.folder, "code_0_helper_functions.R"))
source(file.path(code.folder, "code_0_parameters.R"))
###################################
#                                 #
#           TRANSFORMATION        #
#                                 #
###################################
# loading known data
known <- load_rda(file.path(data.folder, "known_with_depvar_20_00.rda"))
known <- as.data.frame(known)
known <- known[, c("Month", "SalOrg", "Material", "demand")]
known$ID <- NA
known$date <- NA
# loading unknown data
unknown <- load_rda(file.path(data.folder, "data_unknown.rda"))
unknown$demand <- NA
unknown$Month <- unknown$date
# merging
known <- rbind(known, unknown)
# add moving average
known <- as.data.table(known)
variable <- "demand"
var_name <- paste0(variable, "_mean_", c(2:10))
known[, (var_name[1])  := rowMeans(mapply(cbind, shift(get(variable), 1:2)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[2])  := rowMeans(mapply(cbind, shift(get(variable), 1:3)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[3])  := rowMeans(mapply(cbind, shift(get(variable), 1:4)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[4])  := rowMeans(mapply(cbind, shift(get(variable), 1:5)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[5])  := rowMeans(mapply(cbind, shift(get(variable), 1:6)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[6])  := rowMeans(mapply(cbind, shift(get(variable), 1:7)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[7])  := rowMeans(mapply(cbind, shift(get(variable), 1:8)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[8])  := rowMeans(mapply(cbind, shift(get(variable), 1:9)),   na.rm = T), by = .(SalOrg, Material)]
known[, (var_name[9])  := rowMeans(mapply(cbind, shift(get(variable), 1:10)),  na.rm = T), by = .(SalOrg, Material)]
known <- as.data.frame(known)
# predicting unknown as moving average
unknown.months <- c("2017-04", "2017-05", "2017-06")
data_unknown <- as.data.frame(known[known$Month %in% unknown.months, ])
summary(data_unknown)
prev <- read.csv(file.path(subm.folder, "median.csv"))
apply(data_unknown, 2, prev$demand)
prev <- read.csv(file.path(subm.folder, "median.csv"))
apply(data_unknown, 2, function(x) cor(x, prev$demand))
apply(data_unknown[, c(7:nrow(data_unknown))], 2, function(x) cor(x, prev$demand))
apply(data_unknown[, c(7:ncol(data_unknown))], 2, function(x) cor(x, prev$demand))
subm5  <- data_unknown[, c("ID", "demand_mean_5")]
subm6  <- data_unknown[, c("ID", "demand_mean_6")]
subm7  <- data_unknown[, c("ID", "demand_mean_7")]
subm8  <- data_unknown[, c("ID", "demand_mean_8")]
subm9  <- data_unknown[, c("ID", "demand_mean_9")]
subm10 <- data_unknown[, c("ID", "demand_mean_10")]
subm5$demand  <- subm5$demand_mean_5
subm6$demand  <- subm6$demand_mean_6
subm7$demand  <- subm7$demand_mean_7
subm8$demand  <- subm8$demand_mean_8
subm9$demand  <- subm9$demand_mean_9
subm10$demand <- subm10$demand_mean_10
write.table(data_unknown[, c("ID", "demand")], file.path(subm.folder, "mov_mean_5.csv"),  sep = ",", row.names = F, quote = F)
write.table(data_unknown[, c("ID", "demand")], file.path(subm.folder, "mov_mean_6.csv"),  sep = ",", row.names = F, quote = F)
write.table(data_unknown[, c("ID", "demand")], file.path(subm.folder, "mov_mean_7.csv"),  sep = ",", row.names = F, quote = F)
write.table(data_unknown[, c("ID", "demand")], file.path(subm.folder, "mov_mean_8.csv"),  sep = ",", row.names = F, quote = F)
write.table(data_unknown[, c("ID", "demand")], file.path(subm.folder, "mov_mean_9.csv"),  sep = ",", row.names = F, quote = F)
write.table(data_unknown[, c("ID", "demand")], file.path(subm.folder, "mov_mean_10.csv"), sep = ",", row.names = F, quote = F)
